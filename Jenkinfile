pipeline {
    agent any

    environment {
        IMAGE_NAME = 'sample-flask-app:latest'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME .'
            }
        }

        stage('Scan Docker Image with Trivy') {
            when {
                expression { fileExists('/var/run/docker.sock') }  // Ensure Docker socket is available
            }
            steps {
                sh '''
                    echo "🔒 Scanning Docker image for vulnerabilities..."
                    trivy image --format json --output trivy-results.json --severity HIGH,CRITICAL $IMAGE_NAME

                    echo "📊 Checking for vulnerabilities with CVSS >= 7.0..."
                    jq '.Results[].Vulnerabilities[] | select(.CVSS.nvd.V3Score >= 7.0)' trivy-results.json > high-cvss.json

                    if [ -s high-cvss.json ]; then
                      echo "❌ High CVSS vulnerabilities found!"
                      cat high-cvss.json
                      exit 1
                    else
                      echo "✅ No high-severity vulnerabilities found."
                    fi
                '''
            }
        }

        stage('Deploy (Simulated)') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo '🚀 Simulated deployment step. Add your real deploy logic here.'
            }
        }
    }
}
